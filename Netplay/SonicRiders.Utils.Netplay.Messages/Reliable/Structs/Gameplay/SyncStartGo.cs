using System;

namespace Riders.Netplay.Messages.Reliable.Structs.Gameplay
{
    public struct SyncStartGo : IEquatable<SyncStartGo>
    {
        /// <summary>
        /// The Date/Time at which the Heartbeat was generated.
        /// </summary>
        public DateTime StartTime;

        public SyncStartGo(DateTime startTime) => StartTime = startTime;

        /// <summary>
        /// Creates a "go" message with a time offset from the current time.
        /// </summary>
        public SyncStartGo(int timeFromNow) => StartTime = DateTime.UtcNow.AddMilliseconds(timeFromNow);
        
        public bool IsDefault() => this.Equals(new SyncStartGo());

        #region Autogenerated
        public bool Equals(SyncStartGo other) => StartTime.Equals(other.StartTime);
        public override bool Equals(object obj) => obj is SyncStartGo other && Equals(other);
        public override int GetHashCode() => StartTime.GetHashCode();
        #endregion
    }
}
