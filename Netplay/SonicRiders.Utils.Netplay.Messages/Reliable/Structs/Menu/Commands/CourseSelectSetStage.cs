using System;
using Reloaded.Memory;
using Riders.Netplay.Messages.Reliable.Structs.Menu.Shared;

namespace Riders.Netplay.Messages.Reliable.Structs.Menu.Commands
{
    public struct CourseSelectSetStage : IMenuSynchronizationCommand, IEquatable<CourseSelectSetStage>
    {
        public Shared.MenuSynchronizationCommand GetCommandKind() => Shared.MenuSynchronizationCommand.CourseSelectSetStage;
        public byte[] ToBytes() => Struct.GetBytes(this);

        /// <summary>
        /// The stage ID associated with this structure.
        /// </summary>
        public byte StageId;

        public CourseSelectSetStage(byte stageId)
        {
            StageId = stageId;
        }

        #region Autogenerated by R#
        public bool Equals(CourseSelectSetStage other) => StageId == other.StageId;
        public override bool Equals(object obj) => obj is CourseSelectSetStage other && Equals(other);
        public override int GetHashCode() => StageId.GetHashCode();
        #endregion
    }
}