<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

<# 
    string[] types = { "Byte", "SByte", "Int16", "UInt16", "Int32", "UInt32", "Int64", "UInt64", "Single", "Double" };
    string[] imguiTypes = { "ImGuiDataType.U8", "ImGuiDataType.S8", "ImGuiDataType.S16", "ImGuiDataType.U16", "ImGuiDataType.S32", "ImGuiDataType.U32", "ImGuiDataType.S64", "ImGuiDataType.U64", "ImGuiDataType.Float", "ImGuiDataType.Double" };
#>

using System;
using System.Runtime.CompilerServices;
using System.Diagnostics.CodeAnalysis;
using DearImguiSharp;

namespace Sewer56.Imgui.Controls
{
    public unsafe partial class Reflection
    {
        #region Make Controls
<#
for (int x = 0; x < types.Length; x++) 
{
#>
        /// <summary>
        /// Adds a Dear Imgui Control to the scene for a specified type.
        /// </summary>
        /// <param name="value">The value to bind to the UI.</param>
        /// <param name="name">The name of the field.</param>
        public static bool MakeControl(<#=types[x]#>* value, string name)
        {
            return ImGui.DragScalar(name, (int)<#=imguiTypes[x]#>, (IntPtr) value, 1.0F, IntPtr.Zero, IntPtr.Zero, null, 1);
        }

        /// <summary>
        /// Adds a Dear Imgui Control to the scene for a specified type.
        /// </summary>
        /// <param name="value">The value to bind to the UI.</param>
        /// <param name="name">The name of the field.</param>
        public static bool MakeControl(ref <#=types[x]#> value, string name)
        {
            return ImGui.DragScalar(name, (int)<#=imguiTypes[x]#>, (IntPtr) Unsafe.AsPointer(ref value), 1.0F, IntPtr.Zero, IntPtr.Zero, null, 1);
        }

        /// <summary>
        /// Adds a Dear Imgui Control to the scene for a specified type.
        /// </summary>
        /// <param name="value">The value to bind to the UI.</param>
        /// <param name="name">The name of the field.</param>
        /// <param name="speed">The speed of the slider.</param>
        public static bool MakeControl(<#=types[x]#>* value, string name, float speed)
        {
            return ImGui.DragScalar(name, (int)<#=imguiTypes[x]#>, (IntPtr) value, speed, IntPtr.Zero, IntPtr.Zero, null, 1);
        }

        /// <summary>
        /// Adds a Dear Imgui Control to the scene for a specified type.
        /// </summary>
        /// <param name="value">The value to bind to the UI.</param>
        /// <param name="name">The name of the field.</param>
        /// <param name="speed">The speed of the slider.</param>
        public static bool MakeControl(ref <#=types[x]#> value, string name, float speed)
        {
            return ImGui.DragScalar(name, (int)<#=imguiTypes[x]#>, (IntPtr) Unsafe.AsPointer(ref value), speed, IntPtr.Zero, IntPtr.Zero, null, 1);
        }

        /// <summary>
        /// Adds a Dear Imgui Control to the scene for a specified type.
        /// </summary>
        /// <param name="value">The value to bind to the UI.</param>
        /// <param name="name">The name of the field.</param>
        /// <param name="speed">The speed of the slider.</param>
        /// <param name="min">The minimum value allowed.</param>
        /// <param name="max">The maximum value allowed.</param>
        public static bool MakeControl(<#=types[x]#>* value, string name, float speed, <#=types[x]#>* min, <#=types[x]#>* max)
        {
            return ImGui.DragScalar(name, (int)<#=imguiTypes[x]#>, (IntPtr) value, speed, (IntPtr) min, (IntPtr) max, null, 1);
        }

        /// <summary>
        /// Adds a Dear Imgui Control to the scene for a specified type.
        /// </summary>
        /// <param name="value">The value to bind to the UI.</param>
        /// <param name="name">The name of the field.</param>
        /// <param name="speed">The speed of the slider.</param>
        /// <param name="min">The minimum value allowed.</param>
        /// <param name="max">The maximum value allowed.</param>
        public static bool MakeControl(<#=types[x]#>* value, string name, float speed, <#=types[x]#> min)
        {
            var minPtr = &min;
            return ImGui.DragScalar(name, (int)<#=imguiTypes[x]#>, (IntPtr) value, speed, (IntPtr) minPtr, IntPtr.Zero, null, 1);
        }

        /// <summary>
        /// Adds a Dear Imgui Control to the scene for a specified type.
        /// </summary>
        /// <param name="value">The value to bind to the UI.</param>
        /// <param name="name">The name of the field.</param>
        /// <param name="speed">The speed of the slider.</param>
        /// <param name="min">The minimum value allowed.</param>
        /// <param name="max">The maximum value allowed.</param>
        public static bool MakeControl(<#=types[x]#>* value, string name, float speed, <#=types[x]#> min, <#=types[x]#> max)
        {
            var minPtr = &min;
            var maxPtr = &max;
            return ImGui.DragScalar(name, (int)<#=imguiTypes[x]#>, (IntPtr) value, speed, (IntPtr) minPtr, (IntPtr) maxPtr, null, 1);
        }

        /// <summary>
        /// Adds a Dear Imgui Control to the scene for a specified type.
        /// </summary>
        /// <param name="value">The value to bind to the UI.</param>
        /// <param name="name">The name of the field.</param>
        /// <param name="speed">The speed of the slider.</param>
        /// <param name="min">The minimum value allowed.</param>
        /// <param name="max">The maximum value allowed.</param>
        public static bool MakeControl(ref <#=types[x]#> value, string name, float speed, ref <#=types[x]#> min, ref <#=types[x]#> max)
        {
            return ImGui.DragScalar(name, (int)<#=imguiTypes[x]#>, (IntPtr) Unsafe.AsPointer(ref value), speed, (IntPtr) Unsafe.AsPointer(ref min), (IntPtr) Unsafe.AsPointer(ref max), null, 1);
        }

        /// <summary>
        /// Adds a Dear Imgui Control to the scene for a specified type.
        /// </summary>
        /// <param name="value">The value to bind to the UI.</param>
        /// <param name="name">The name of the field.</param>
        /// <param name="speed">The speed of the slider.</param>
        /// <param name="min">The minimum value allowed.</param>
        /// <param name="max">The maximum value allowed.</param>
        public static bool MakeControl(ref <#=types[x]#> value, string name, float speed, <#=types[x]#> min, <#=types[x]#> max)
        {
            return ImGui.DragScalar(name, (int)<#=imguiTypes[x]#>, (IntPtr) Unsafe.AsPointer(ref value), speed, (IntPtr) Unsafe.AsPointer(ref min), (IntPtr) Unsafe.AsPointer(ref max), null, 1);
        }

        /// <summary>
        /// Adds a Dear Imgui Control to the scene for a specified type.
        /// </summary>
        /// <param name="value">The value to bind to the UI.</param>
        /// <param name="name">The name of the field.</param>
        /// <param name="speed">The speed of the slider.</param>
        /// <param name="format">The C style format of the string displayed.</param>
        public static bool MakeControl(<#=types[x]#>* value, string name, float speed, string format)
        {
            return ImGui.DragScalar(name, (int)<#=imguiTypes[x]#>, (IntPtr) value, speed, IntPtr.Zero, IntPtr.Zero, format, 1);
        }

        /// <summary>
        /// Adds a Dear Imgui Control to the scene for a specified type.
        /// </summary>
        /// <param name="value">The value to bind to the UI.</param>
        /// <param name="name">The name of the field.</param>
        /// <param name="speed">The speed of the slider.</param>
        /// <param name="format">The C style format of the string displayed.</param>
        public static bool MakeControl(ref <#=types[x]#> value, string name, float speed, string format)
        {
            return ImGui.DragScalar(name, (int)<#=imguiTypes[x]#>, (IntPtr) Unsafe.AsPointer(ref value), speed, IntPtr.Zero, IntPtr.Zero, format, 1);
        }
<#
}
#>                
        #endregion
    }
}